from sklearn.cluster import KMeans
import pandas as pd
import random
import csv

from scipy import stats as pcs

# df = pd.read_csv("blogdata2.txt", sep="\t")

df = pd.read_csv('blogdata2.txt', sep="\t", quoting=csv.QUOTE_NONE, index_col=False)
clusters = 5
# df_dict = dict(df)

# print(df.values) # Each row
# print(df.columns.values) #each word

#############################

name_with_random = dict()
centriods = []

for i in range(0, clusters):
    # centroid = dict()
    c = [f'centroid{i}']
    for col in df:
        if col == 'Blog':
            continue
        min = df[col].values.min()
        max = df[col].values.max()
        ran = random.randint(min, max)
        #print(f'col: {df[col].name}')
        #print(f'max: {df[col].values.max()}')
        #print(f'min: {df[col].values.min()}')
        #print(f'ran: {ran}')
        #name_with_random[df[col].name] = ran # Bättre med sample??
        #centroid[df[col].name] = ran
        c.append(ran)
    centriods.append(c)


#for i in range(0, clusters):
    for centroid in centriods:
        distance = 0
        for blog in df.values:
            ## pearson score centroid vs all blogs
            pearson = pcs.pearsonr(centroid[1:], blog[1:])[0]
            ## Assign to closest centroid
            # om pearson för centroid är högst
            if pearson > distance:
                distance = pearson
                best = centroid
            #print(blog)
            #print(df.corrwith( pd.DataFrame(centriods), axis='columns'))
    # blog['closest'] = best[0:1]
    centroid.append(blog)

    print(centroid[-1][0:1])
    break


'''
words_with_avg = {}
for word in df.columns.values:
    print(word)
    if word == 'Blog':
        print('found blog')
        continue
    max = max(df[word])
    min = min(df[word])
    ran = random.randint(min, max)
    print(ran)
    # words_with_avg[word] = random.randint(min, max)


print(words_with_avg)
'''